@model Infraestructure.Models.RESERVA

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<div style="padding:3%">
    <h2>Orden de cuadraciclo</h2>
    @using (Html.BeginForm("Save", "Reserva", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="row">
                @*<div class="col-md-6">
                         <div class="form-group">
                             @Html.LabelFor(model => model.ID_USUARIO, htmlAttributes: new { @class = "col-form-label " })
                             <div class="col-md-12">
                                 @Html.DropDownListFor(model => model.ID_USUARIO, (SelectList)ViewBag.idUsuario, " Seleccione un usuario ", htmlAttributes: new { @class = "mw-100 form-control " })
                                 @Html.ValidationMessageFor(model => model.ID_USUARIO, "", new { @class = "text-danger" })
                             </div>
                         </div>
                    </div>*@
                @{
                    string nombre = "";
                    int idUsuario = 0;
                    Infraestructure.Models.USUARIO oUsuario;
                    //Validar si existe en la sesión
                    if (Session["User"] != null)
                    {
                        oUsuario = (Infraestructure.Models.USUARIO)Session["User"];
                        if (oUsuario != null)
                        {
                            nombre = $"{oUsuario.NOMBRE} {oUsuario.PRIMER_APELLIDO} {oUsuario.SEGUNDO_APELLIDO}";
                            idUsuario = oUsuario.ID_USUARIO;
                        }
                    }
                }
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="col-form-label">Cliente</label><br />
                        <div class="col-md-10">
                            <div class="form-control">
                                @nombre
                            </div>
                        </div>
                    </div>
                </div>

                @Html.HiddenFor(model => model.ID_USUARIO, htmlAttributes: new { @class = "form-control", @Value = idUsuario })
                @Html.ValidationMessageFor(model => model.ID_USUARIO, "", new { @class = "text-danger" })

                <div class="col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FECHA_RESERVA, htmlAttributes: new { @class = "col-form-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.FECHA_RESERVA, htmlAttributes: new { @class = "form-control", @Value = DateTime.Now.ToString("yyyy-MM-dd") })
                            @Html.ValidationMessageFor(model => model.FECHA_RESERVA, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FECHA_PAGO, htmlAttributes: new { @class = "col-form-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.FECHA_PAGO, htmlAttributes: new { @class = "form-control", @Value = DateTime.Now.ToString("yyyy-MM-dd"), @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.FECHA_PAGO, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <hr />
        <span class="glyphicons glyphicons-hand-left"></span>
        <h5>Tours</h5>
        <div id="resultadoDetalleTour">
            @if (Web.ViewModel.Carrito.Instancia.ItemsTour.Count() > 0)
            {
                @Html.Partial("~/Views/Reserva/_DetalleTour.cshtml", (List<Web.ViewModel.ViewModelTourDetalle>)ViewBag.DetalleOrdenTour)
            }
            else
            {
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    No hay tours agregados.
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }
        </div>
        <hr />
        <h5>Cuadras</h5>
        <div id="resultadoDetalle">
            @if (Web.ViewModel.Carrito.Instancia.Items.Count() > 0)
            {
                @Html.Partial("~/Views/Reserva/_DetalleReserva.cshtml", (List<Web.ViewModel.ViewModelReservaDetalle>)ViewBag.DetalleOrden)

            }
            else
            {
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    La orden no tiene cuadras asignados
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

            }

        </div>
        <hr />
        <h5>Datos de tarjeta de crédito o débito</h5><br />
        <div class="form-group">

            @Html.LabelFor(model => model.ID_TARJETA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.ID_TARJETA, value: "1") Visa
                <br />
                @Html.RadioButtonFor(model => model.ID_TARJETA, value: "2") MasterCard
                <br />
                @Html.RadioButtonFor(model => model.ID_TARJETA, value: "3") American Express
                @Html.ValidationMessageFor(model => model.ID_TARJETA, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.NUM_TARJETA, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NUM_TARJETA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NUM_TARJETA, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <hr />

        <button type="submit" class="btn btn-success float-right" id="btnOrdenar">
            <span class="glyphicon  glyphicon-floppy-save"></span>
            Reservar
        </button>
    }
</div>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")

    <script src="~/Scripts/jquery-3.5.1.min.js"></script>
    <script src="~/Scripts/jquery-ui.js"></script>
    <script>
        $(document).ready(function () {
            $("#FECHA_RESERVA").datepicker({
                dateFormat: "yy-mm-dd",
                defaultDate: 15,
                changeMonth: true,
                changeYear: true,
                yearRange : "2021:2022",
                minDate: 1,
            });
        });
    </script>

    <script type="text/javascript">

        //Actualizar cantidad de libros en el carrito
        //Cambio de cantidad en caja de texto
        function updateCantidad(ctr) {
            var txtCantidad = $(ctr);
            var cantidad = txtCantidad.val();
            var id = txtCantidad.data("cuadraid");
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Reserva/actualizarCantidad",
                data: { "idCuadra": id, "cantidad": cantidad },
                success: function (data) {
                    $("#resultadoDetalle").html('');
                    $("#resultadoDetalle").html(data);
                    updateCantCuadras();
                    //updateDesglose();
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        }
        function updateCantidadHoras(ctr) {
            var txtCantidadHoras = $(ctr);
            var cantidadHoras = txtCantidadHoras.val();
            var id = txtCantidadHoras.data("cuadraid");
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Reserva/actualizarCantidadHoras",
                data: { "idCuadra": id, "cantidadHoras": cantidadHoras },
                success: function (data) {
                    $("#resultadoDetalle").html('');
                    $("#resultadoDetalle").html(data);
                    updateCantCuadras();
                    //updateDesglose();
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        }
        function updateCantidadTours(ctr) {
            var txtCantidadTours = $(ctr);
            var cantidadTours = txtCantidadTours.val();
            var id = txtCantidadTours.data("tourid");
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Reserva/actualizarCantidadTours",
                data: { "idTour": id, "cantidad": cantidadTours },
                success: function (data) {
                    $("#resultadoDetalleTour").html('');
                    $("#resultadoDetalleTour").html(data);
                    updateCantidad();
                    updateCantCuadras();
                    //updateDesglose();
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        }
        //Actualizar cantidad de cuadras en el menú
        function updateCantCuadras() {
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Reserva/actualizarOrdenCantidad",
                success: function (data) {
                    $("#cantidadCuadras").html('');
                    $("#cantidadCuadras").html(data);
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        }


    </script>
}
